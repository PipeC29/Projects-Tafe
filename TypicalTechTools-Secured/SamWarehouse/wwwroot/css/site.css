/* Please see documentation at https://docs.microsoft.com/aspnet/core/client-side/bundling-and-minification
for details on configuring this project to bundle and minify static web assets. */

a.navbar-brand {
  white-space: normal;
  text-align: center;
  word-break: break-all;
}

/* Provide sufficient contrast against white background */
a {
  color: #0366d6;
}

.btn-primary {
  color: #fff;
  background-color: #1b6ec2;
  border-color: #1861ac;
}

.nav-pills .nav-link.active, .nav-pills .show > .nav-link {
  color: #fff;
  background-color: #1b6ec2;
  border-color: #1861ac;
}

/* Sticky footer styles
-------------------------------------------------- */
html {
  font-size: 14px;
}
@media (min-width: 768px) {
  html {
    font-size: 16px;
  }
}

.border-top {
  border-top: 1px solid #e5e5e5;
}
.border-bottom {
  border-bottom: 1px solid #e5e5e5;
}

.box-shadow {
  box-shadow: 0 .25rem .75rem rgba(0, 0, 0, .05);
}

button.accept-policy {
  font-size: 1rem;
  line-height: inherit;
}

/* Sticky footer styles
-------------------------------------------------- */
html {
  position: relative;
  min-height: 100%;
}

body {
  /* Margin bottom by footer height */
  margin-bottom: 60px;
}
.footer {
    position: absolute;
    bottom: 0;
    height: 20px;
    margin-bottom: 60px;
    width: 100%;
    white-space: nowrap;
    line-height: 60px; /* Vertically center the text there */
}

/*Classes used purely for tagging buttons for our JavaScript*/
.delete-Button 
{

}
.edit 
{

}
.details-Button 
{

}

/*Classes for our shopping cart modal*/

/*This style will apply to any modal dialog inside a class with both the modal and right classes*/
.modal.right .modal-dialog {
    position:fixed;
    right:0;
    margin:auto;
    min-width:40%;
    height:100%;
}
/*This style will apply to any modal content inside a class with both the modal and right classes*/
.modal.right .modal-content {
    height: 100%;
    overflow-y:auto;
}





.theme-text {
    color: var(--theme-text)
}

/*Colour classes based upon our theme colours from our current theme variables*/
.theme-colour-0 {
    color: var(--theme-colour-0)
}

.theme-colour-1 {
    color: var(--theme-colour-1)
}

.theme-colour-2 {
    color: var(--theme-colour-2)
}

.theme-colour-3 {
    color: var(--theme-colour-3)
}

.theme-colour-4 {
    color: var(--theme-colour-4)
}

/*Background Colour classes based upon our theme colours from our current theme variables*/
.bg-theme-colour-0 {
    background-color: var(--theme-colour-0)
}

.bg-theme-colour-1 {
    background-color: var(--theme-colour-1)
}

.bg-theme-colour-2 {
    background-color: var(--theme-colour-2)
}

.bg-theme-colour-3 {
    background-color: var(--theme-colour-3)
}

.bg-theme-colour-4 {
    background-color: var(--theme-colour-4)
}


html {
    font-size: 14px;
}

@media (min-width: 768px) {
    html {
        font-size: 16px;
    }
}

html {
    position: relative;
    min-height: 100%;
}

body {
    margin-bottom: 60px;
}


/*Custom classes with no style settings to use as 'Tags' to identify the type of button they are.
This can be used to find them in our JavaScript when we have more than one.*/
.delete-button {
}

.edit-button {
}


.details-button {
}


.minus-button 
{
   
}

 






.plus-button{

}


.item-qty-form{

}


.qty{

}

.add-item-button{

}

.body{
    margin:0;
    display:flex;
    justify-content:center;
    align-items:center;
    min-height:100vh;
    background-color: white;
}

.door-container {
    position: relative;
    width: 100px;
    height: 100px;
    perspective: 100px;
}

.door {
    position: absolute;
    width: 100%;
    height: 100%;
    transform-style: preserve-3d;
    transform-origin: top left; /* Adjusted transform origin */
    animation: dooranimation 3s ease-in-out infinite;
}

   


.iris {
    position: absolute;
    width: 50%;
    height: 50%;
    background-image: url('/images/Sams-Warehouse-Shopping-Cart.svg');
    background-size: contain; /* Adjusted background size */
    transform: translate(1px);
}

@keyframes dooranimation {
    0%, 100% {
        transform: rotateX(0deg);
    }

    50% {
        transform: rotateY(180deg);
    }
}



        @keyframes rotate {
            from {transform: rotateX(0deg);}
            to {transform: rotateY(180deg);}
        }

        img {
            animation: rotate 5s infinite;
            width: 50%;
            height: 50%;
        }





